{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","Robots","cardsArray","map","user","i","Scroll","props","style","overflowY","border","height","children","SearchBox","searchField","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","Robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAgBeA,EAbF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GAEvB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCULK,EAjBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAaD,EAAOE,KAAI,SAACC,EAAKC,GAChC,OACI,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAMjB,OACI,8BACKH,KCLEI,EARA,SAACC,GACZ,OACI,sBAAKC,MAAO,CAACC,UAAW,SAASC,OAAO,kBAAkBC,OAAO,SAAjE,UACKJ,EAAMK,SADX,QCWOC,EAbG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKlB,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVmB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OC4CXI,G,wDA1CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACR,YAAaO,EAAME,OAAOC,SAbzC,EAAKC,MAAQ,CACTxB,OAAQ,GACRa,YAAa,IAJP,E,qDAQd,WAAoB,IAAD,OACfY,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKR,SAAS,CAACrB,OAAO6B,S,oBAQ1C,WAAS,IAAD,EAC0BC,KAAKN,MAA3BxB,EADJ,EACIA,OAAOa,EADX,EACWA,YACTkB,EAAiB/B,EAAOgC,QAAO,SAAAC,GACjC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAStB,EAAYqB,kBAGzD,OAAIlC,EAAOoC,OAKH,sBAAKxC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWkB,aAAcgB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUnB,OAAQ+B,SARnB,gD,GA3BDM,cCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.da51c9ab.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({name, email,id}) => {\r\n    // const {name, email,id} = props;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div >\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({Robots}) => {\r\n    const cardsArray = Robots.map((user,i) => {\r\n        return (\r\n            <Card \r\n                key={i} \r\n                id={Robots[i].id} \r\n                name={Robots[i].name} \r\n                email={Robots[i].email}/>\r\n            );\r\n    })\r\n    return (\r\n        <div>\r\n            {cardsArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll',border:'5px solid black',height:'800px'}} >\r\n            {props.children};\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField,searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 b3 b--green bg-lightest-blue' \r\n                type='search' \r\n                placeholder='Search Robots'\r\n                onChange={searchChange} \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\n\r\n// const state = {\r\n//     Robots: Robots,\r\n//     searchField: ''\r\n// }\r\nclass App extends Component{\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            Robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => {this.setState({Robots:users})});\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchField: event.target.value})\r\n        // console.log(event.target.value);\r\n    }\r\n\r\n    render(){\r\n        const { Robots,searchField} = this.state;\r\n        const filteredRobots = Robots.filter(Robot => {\r\n            return Robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        })\r\n\r\n        if(!Robots.length){\r\n            return <h1>Loading...</h1>\r\n        }\r\n        else{\r\n            return(\r\n                <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <CardList Robots={filteredRobots}/>\r\n                </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}